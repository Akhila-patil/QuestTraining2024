1.DDL(Data Definition Language):

Data Definition Language actually consists of the SQL commands that can be used to define the database schema. It simply deals with descriptions of the database schema and is used to create and modify the structure of database objects in the database.

DDL is a set of SQL commands used to create, modify, and delete database structures but not data. These commands are normally not used by a general user, who should be accessing the database via an application.

List of DDL Commands:

-CREATE
-DROP
-ALTER
-TRUNCATE
-COMMENT
-RENAME

2.DQL(Data Query Language):

It includes the SELECT statement.This command allows getting the data out of the database to perform operations with it. When a SELECT is fired against a table or tables the result is compiled into a further temporary table, which is displayed or perhaps received by the program.

3.DML(Data Manipulation Language):

The SQL commands that deal with the manipulation of data present in the database belong to DML or Data Manipulation Language and this includes most of the SQL statements. 

It is the component of the SQL statement that controls access to data and to the database.

List of DML Commands:
-INSERT
-UPDATE
-DELETE
-LOCK

4.DCL(Data Control Language):

DCL includes commands such as GRANT and REVOKE which mainly deal with the rights, permissions, and other controls of the database system. 

List of  DCL commands:
-GRANT
-REVOKE

5.TCL(Transaction Control Language):

Transactions group a set of tasks into a single execution unit. Each transaction begins with a specific task and ends when all the tasks in the group are successfully completed. If any of the tasks fail, the transaction fails.

List of TCL Commands:
-BEGIN TRANSACTION
-COMMIT
-ROLLBACK
-SAVEPOINT


Joins and thier Types:

 A Join clause is used to combine rows from two or more tables, based on a related column between them.

1.INNER JOIN: Returns records that have matching values in               both tables
2.LEFT JOIN:  Returns all records from the left table, and               the matched records from the right table
3.RIGHT JOIN: Returns all records from the right table, and               the matched records from the left table
4.FULL JOIN:  Returns all records when there is a match in                  either left or right table


Aggregate Funtions in sql:
  An aggregate function is a function that performs a calculation on values, and returns a single value.

Aggregate functions are often used with the GROUP BY clause of the SELECT statement. The GROUP BY clause splits the result-set into groups of values and the aggregate function can be used to return a single value for each group.

The most commonly used SQL aggregate functions are:

MIN() - returns the smallest value within the selected column
MAX() - returns the largest value within the selected column
COUNT() - returns the number of rows in a set
SUM() - returns the total sum of a numerical column
AVG() - returns the average value of a numerical column

Triggers in sql:

 A trigger is a set of SQL statements that reside in system memory with unique names. It is a specialized category of stored procedure that is called automatically when a database server event occurs. Each trigger is always associated with a table.

View in sql:
 view is a virtual table.view table contains rows and  columns, just like a real table. The fields in a view are  fields from one or more real tables in the database.

Constraints available in SQL are:

-NOT NULL: 
         Whenever a table's column is declared as NOT NULL,          then the value for that column cannot be empty for            any of the table's records.
-UNIQUE: 
         Duplicate values are not allowed in the columns to            which the UNIQUE constraint is applied.
-PRIMARY KEY:
         The column to which we have applied the primary               constraint will always contain a unique value and             will not allow null values.
-FOREIGN KEY:
         Foreign key help to achieve the relationship between          two tables and to access the data. 
-CHECK:
         Whenever a check constraint is applied to the          table's column, and the user wants to insert the          value in it, then the value will first be checked          for certain conditions before inserting the value          into that column.
         
-DEFAULT:
         Whenever a default constraint is applied to the          table's column, and the user has not specified the          value to be inserted in it, then the default value          which was specified while applying the default          constraint will be inserted into that particular          column.
         
-CREATE INDEX:
         CREATE INDEX constraint is used to create an index          on the table. Indexes are not visible to the user,          but they help the user to speed up the searching          speed or retrieval of data from the database.

GROUP BY:
The GROUP BY statement groups rows that have the same values into summary rows, like "find the number of customers in each country".

The GROUP BY statement is often used with aggregate functions (COUNT(), MAX(), MIN(), SUM(), AVG()) to group the result-set by one or more columns.

ORDER BY:
The ORDER BY keyword is used to sort the result-set in ascending or descending order.

HAVING:
The HAVING clause was added to SQL because the WHERE keyword cannot be used with aggregate functions.

DISTINCT:
It is used to return only different values because table may contain duplicate values.








